<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE symbol-and-basic-behavior-files SYSTEM "../symbol-and-basic-behavior-files.dtd">
<option xmlns="http://www.xabsl.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="opt_near_ball_adjust" initial-state="get_angle">
  &xabsl_symbol;
  &basic_behavior;
  &options;
  <state name="get_angle">
    <subsequent-basic-behavior ref="behavior_get_angle"/>
    <decision-tree>
      <if>
        <condition description="">
          <not>
            <subsequent-option-reached-target-state/>
          </not>
        </condition>
        <transition-to-state ref="get_angle"/>
      </if>
      <else>
        <transition-to-state ref="check_adjust_angle"/>
      </else>
    </decision-tree>
  </state>
  <state name="check_adjust_angle">
    <subsequent-basic-behavior ref="behavior_nothing"/>
    <decision-tree>
      <if>
        <condition description="">
          <and>
            <less-than-or-equal-to>
              <decimal-input-symbol-ref ref="kickDestTheta"/>
              <decimal-value value="0.1"/>
            </less-than-or-equal-to>
            <greater-than-or-equal-to>
              <decimal-input-symbol-ref ref="kickDestTheta"/>
              <decimal-value value="-0.1"/>
            </greater-than-or-equal-to>
          </and>
        </condition>
        <transition-to-state ref="check_adjust_angle_detail"/>
      </if>
      <else>
        <if>
          <condition description="">
            <less-than>
              <decimal-input-symbol-ref ref="kickDestTheta"/>
              <decimal-value value="0"/>
            </less-than>
          </condition>
          <transition-to-state ref="adjust_turn_anti_clk_wise"/>
        </if>
        <else>
          <transition-to-state ref="adjust_turn_clk_wise"/>
        </else>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_turn_clk_wise">
    <subsequent-basic-behavior ref="behavior_center_round_clockwise"/>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_turn_clk_wise"/>
      </if>
      <else>
        <transition-to-state ref="get_angle"/>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_turn_anti_clk_wise">
    <subsequent-basic-behavior ref="behavior_center_round_anticlockwise"/>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_turn_anti_clk_wise"/>
      </if>
      <else>
        <transition-to-state ref="get_angle"/>
      </else>
    </decision-tree>
  </state>
  <state name="check_adjust_angle_detail">
    <subsequent-basic-behavior ref="behavior_nothing"/>
    <decision-tree>
      <if>
        <condition description="">
          <greater-than>
            <decimal-input-symbol-ref ref="ballLoc.Image.x"/>
            <decimal-value value="500"/>
          </greater-than>
        </condition>
        <transition-to-state ref="adjust_angle_detail_right"/>
      </if>
      <else>
        <if>
          <condition description="">
            <less-than>
              <decimal-input-symbol-ref ref="ballLoc.Image.x"/>
              <decimal-value value="200"/>
            </less-than>
          </condition>
          <transition-to-state ref="adjust_angle_detail_left"/>
        </if>
        <else>
          <transition-to-state ref="check_adjust_distance"/>
        </else>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_angle_detail_left">
    <subsequent-basic-behavior ref="behavior_step">
      <set-parameter ref="behavior_step.orientation">
        <enum-element-ref ref="_orientation.Left"/>
      </set-parameter>
    </subsequent-basic-behavior>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_angle_detail_left"/>
      </if>
      <else>
        <transition-to-state ref="check_adjust_angle_detail"/>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_angle_detail_right">
    <subsequent-basic-behavior ref="behavior_step">
      <set-parameter ref="behavior_step.orientation">
        <enum-element-ref ref="_orientation.Right"/>
      </set-parameter>
    </subsequent-basic-behavior>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_angle_detail_right"/>
      </if>
      <else>
        <transition-to-state ref="check_adjust_angle_detail"/>
      </else>
    </decision-tree>
  </state>
  <state name="check_adjust_distance">
    <subsequent-basic-behavior ref="behavior_nothing"/>
    <decision-tree>
      <if>
        <condition description="">
          <greater-than>
            <decimal-input-symbol-ref ref="ballDistance"/>
            <decimal-value value="0.1"/>
          </greater-than>
        </condition>
        <transition-to-state ref="adjust_step_fwd"/>
      </if>
      <else>
        <transition-to-state ref="adjust_done"/>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_step_fwd">
    <subsequent-basic-behavior ref="behavior_step">
      <set-parameter ref="behavior_step.orientation">
        <enum-element-ref ref="_orientation.Up"/>
      </set-parameter>
    </subsequent-basic-behavior>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_step_fwd"/>
      </if>
      <else>
        <transition-to-state ref="check_adjust_distance"/>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_step_bkwd">
    <subsequent-basic-behavior ref="behavior_step">
      <set-parameter ref="behavior_step.orientation">
        <enum-element-ref ref="_orientation.Down"/>
      </set-parameter>
    </subsequent-basic-behavior>
    <decision-tree>
      <if>
        <condition description="">
          <less-than>
            <time-of-state-execution/>
            <decimal-value value="1000"/>
          </less-than>
        </condition>
        <transition-to-state ref="adjust_step_bkwd"/>
      </if>
      <else>
        <transition-to-state ref="check_adjust_distance"/>
      </else>
    </decision-tree>
  </state>
  <state name="adjust_done" is-target-state="true">
    <subsequent-basic-behavior ref="behavior_nothing"/>
    <decision-tree>
      <transition-to-state ref="adjust_done"/>
    </decision-tree>
  </state>
</option>
